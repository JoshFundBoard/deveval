[{"/Users/mouzayanalkhalil/supernovas/fundboard/deveval/src/index.js":"1","/Users/mouzayanalkhalil/supernovas/fundboard/deveval/src/App.js":"2","/Users/mouzayanalkhalil/supernovas/fundboard/deveval/src/app/store.js":"3","/Users/mouzayanalkhalil/supernovas/fundboard/deveval/src/app/actionTypes.js":"4","/Users/mouzayanalkhalil/supernovas/fundboard/deveval/src/app/sagas.js":"5","/Users/mouzayanalkhalil/supernovas/fundboard/deveval/src/app/reducers.js":"6","/Users/mouzayanalkhalil/supernovas/fundboard/deveval/src/app/utils.js":"7"},{"size":343,"mtime":1618085780947,"results":"8","hashOfConfig":"9"},{"size":4124,"mtime":1618240001911,"results":"10","hashOfConfig":"9"},{"size":346,"mtime":1618085780944,"results":"11","hashOfConfig":"9"},{"size":292,"mtime":1618238912023,"results":"12","hashOfConfig":"9"},{"size":2635,"mtime":1618245206904,"results":"13","hashOfConfig":"9"},{"size":1019,"mtime":1618239322546,"results":"14","hashOfConfig":"9"},{"size":1315,"mtime":1618085780944,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1aaw753",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/mouzayanalkhalil/supernovas/fundboard/deveval/src/index.js",[],["33","34","35","36","37","38"],"/Users/mouzayanalkhalil/supernovas/fundboard/deveval/src/App.js",["39","40","41","42"],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch, Provider } from 'react-redux';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faExclamationTriangle,\n  faFileUpload,\n  faSave,\n} from '@fortawesome/free-solid-svg-icons';\nimport Logo from './imgs/FundBoard_Logo.svg';\nimport store from './app/store';\nimport * as types from './app/actionTypes';\nimport { postChoices } from './app/sagas';\n\nlibrary.add(fab, faExclamationTriangle, faFileUpload, faSave);\n\nfunction App() {\n  const getStatus = useSelector(state => state.get_status);\n  const desserts = useSelector(state => state.desserts) || [];\n  const name = useSelector(state => state.name) || '';\n  console.log(desserts); // just here so eslint doesn't complain. And handy for debugging.\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch({\n      type: types.AIRTABLE_GET_REQUESTED,\n    });\n  }, [dispatch]);\n\n  const [selected, setSelected] = useState([]);\n\n  const addToSelected = validDessert => {\n    if (selected.length <= 2 && !selected.includes(validDessert)) {\n      setSelected([...selected, validDessert]);\n    } else if (selected.length >= 3) {\n      alert('stop');\n    }\n  };\n  console.log(selected);\n\n  const validDesserts = desserts\n    .filter(dessert => dessert !== undefined)\n    .sort();\n\n  const buttonList = validDesserts.map(validDessert => (\n    <div className=\"container p-0\">\n      <ul className=\"list-group\">\n        <li key={validDessert.substring(0, 3)} className=\"list-group-item p-0\">\n          {console.log(validDessert.substring(0, 3))}\n          <Button\n            onClick={() => addToSelected(validDessert)}\n            variant={selected ? 'info' : 'secondary'}\n            className=\"w-100 btnNoMax mb-2 list-group-item\"\n          >\n            {validDessert}\n          </Button>\n        </li>\n      </ul>\n    </div>\n  ));\n\n  const selectionLength = selected.length > 3;\n\n  const handleClick = () => {\n    postChoices({\n      name, choices: selected,\n    });\n  };\n\n  return (\n    <Provider store={store}>\n      <Navbar className=\"nav\">\n        <a href=\"/\" className=\"navBrand\">\n          <img className=\"navLogo\" src={Logo} alt=\"FundBoard Logo\" />\n          <span className=\"navName\">FundBoard</span>\n        </a>\n      </Navbar>\n      <main id=\"Main\">\n        <div className=\"container-xl\">\n          <Row>\n            <Col>\n              <div className=\"mt-4 mb-2\">\n                <h1 className=\"text-center\">Choose a Dessert</h1>\n                <p className=\"text-center\">Choose up to 3 desserts.</p>\n                <p className=\"text-center\">\n                  {selectionLength\n                    ? 'You Have Already 3 Desserts'\n                    : `Please Select ${3 - selected.length} Desserts`}\n                </p>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={{ span: 6, offset: 3 }}>\n              <div className=\"mb-2\">{`Get Status: ${getStatus}`}</div>\n              <div className=\"d-flex flex-wrap\">\n                {buttonList}\n                <Button variant=\"secondary\" className=\"w-100 btnNoMax mb-2\">\n                  Example selected button\n                </Button>\n              </div>\n              <InputGroup className=\"mb-2 p-1\">\n                <FormControl\n                  type=\"text\"\n                  value={name}\n                  onChange={e => dispatch({ type: types.UPDATE_NAME, payload: e.target.value })}\n                  placeholder=\"Enter your name\"\n                  aria-label=\"Enter your name\"\n                />\n              </InputGroup>\n              <Button onClick={handleClick} variant=\"primary\">Save</Button>\n            </Col>\n          </Row>\n        </div>\n      </main>\n    </Provider>\n  );\n}\n\nexport default App;\n","/Users/mouzayanalkhalil/supernovas/fundboard/deveval/src/app/store.js",[],"/Users/mouzayanalkhalil/supernovas/fundboard/deveval/src/app/actionTypes.js",[],"/Users/mouzayanalkhalil/supernovas/fundboard/deveval/src/app/sagas.js",[],"/Users/mouzayanalkhalil/supernovas/fundboard/deveval/src/app/reducers.js",["43"],"import * as types from './actionTypes';\nimport {\n  processErr,\n} from './utils';\n\nconst resets = {\n  get_status: '',\n  post_status: '',\n};\n\nconst defaults = {\n  ...resets,\n  // add any other defaults that shouldn't reset here.\n};\n\nexport default function rootReducer(state = defaults, action) {\n  console.log(action); // just for debugging\n  switch (action.type) {\n    case types.AIRTABLE_GET_REQUESTED: return {\n      ...state,\n      get_status: 'pending',\n    };\n    case types.AIRTABLE_GET_SUCCEEDED:\n      return {\n        ...state,\n        get_status: 'succeeded',\n        desserts: action.data.records.map(r => r.fields.value),\n      };\n    case types.AIRTABLE_GET_FAILED: return {\n      ...state,\n      get_status: processErr(action.error),\n    };\n    case types.AIRTABLE_GET_DISMISSED: return {\n      ...state,\n      get_status: '',\n      // This is so you can dismiss status alerts\n    };\n    case types.UPDATE_NAME: return {\n      ...state,\n      name: action.payload,\n    };\n    default: return state;\n  }\n}\n","/Users/mouzayanalkhalil/supernovas/fundboard/deveval/src/app/utils.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":27,"column":3,"nodeType":"58","messageId":"59","endLine":27,"endColumn":14},{"ruleId":"60","severity":1,"message":"61","line":43,"column":7,"nodeType":"62","messageId":"59","endLine":43,"endColumn":20},{"ruleId":"56","severity":1,"message":"57","line":46,"column":3,"nodeType":"58","messageId":"59","endLine":46,"endColumn":14},{"ruleId":"56","severity":1,"message":"57","line":56,"column":12,"nodeType":"58","messageId":"59","endLine":56,"endColumn":23},{"ruleId":"56","severity":1,"message":"57","line":17,"column":3,"nodeType":"58","messageId":"59","endLine":17,"endColumn":14},"lines-around-directive",["63"],"no-spaced-func",["64"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","no-alert","Unexpected alert.","CallExpression","padding-line-between-statements","func-call-spacing"]